from django.db import models
from datetime import date
from django.contrib import admin
from generic.models import Asset_Type, Language, Genres_List, Platform
from extras.models import Partner, FExchange
from django_countries.fields import CountryField
from django.forms import Textarea

class Title(models.Model):
  def get_autogenerated_code():
    last_id = Title.objects.values('id').order_by('id').last()
    if not last_id:
      return "TITLE-"+str(1)
    return "TITLE-"+str(last_id['id'])
  code = models.CharField( max_length = 8, default = get_autogenerated_code, editable=False )
  isrc_code = models.CharField(max_length=15, default="NA", blank=True)
  display_name = models.CharField(max_length=150, blank=False)
  type = models.ForeignKey(Asset_Type, on_delete=models.CASCADE, null=True)
  cloud_path = models.CharField( max_length=250, blank=True)
  owner = models.ForeignKey(Partner, null=True, blank=True, on_delete=models.CASCADE)
  genre = models.ForeignKey(Genres_List, null=True, on_delete=models.CASCADE)
  sub_genre = models.ForeignKey(Genres_List, null=True, related_name="track_sub_genre", on_delete=models.CASCADE)
  mood = models.CharField(max_length=50,  blank=True)
  sequence = models.IntegerField(blank=True, default=0)
  label = models.CharField(max_length=100, blank=True)
  duration_sec = models.IntegerField(default=0, blank=True, verbose_name="Play Duration in Seconds")
  language = models.ForeignKey(Language, null=True, on_delete=models.CASCADE, related_name="title_language")
  acquisition_cost = models.FloatField(null=True, blank=True, default=0.0)
  release_year = models.IntegerField(null=True, blank=True )
  director = models.CharField(max_length=100, blank=True)
  producer = models.CharField(max_length=100, blank=True)
  actor = models.CharField(max_length=100, blank=True)
  actress = models.CharField(max_length=100, blank=True)
  #starcast = models.CharField(max_length=150, blank=True)
  singer = models.CharField(max_length=200, blank=True)
  lyricist = models.CharField(max_length=200, blank=True)
  music_composer = models.CharField(max_length=200, blank=True)
  content_provider = models.CharField(max_length=100, blank=True)
  deep_link = models.CharField(max_length=200, blank=True)
  purchase_date = models.DateField(blank=True, default=date.today)
  origin_country = CountryField(blank=True)
  origin_country_state = models.CharField(max_length=60, blank=True)
  status = models.BooleanField(default=True, blank=False)
  added_on = models.DateTimeField( auto_now_add = True, null=True  )
  def __str__(self):
    return "%s | %s" % (self.display_name, self.code)


# Create your models here.
class Album(models.Model):
  def get_autogenerated_code():
    last_id = Album.objects.values('id').order_by('id').last()
    if not last_id:
      return "ALBUM-"+str(1)
    return "ALBUM-"+str(last_id['id'])
  ref_code = models.CharField(max_length=8, default=get_autogenerated_code, editable=False )
  upc_code = models.CharField(max_length=15, default="NA", blank=True)
  album_name = models.CharField( max_length = 150, blank = False )
  description = models.CharField( max_length=150, blank=True)
  titles = models.ManyToManyField( Title )
  genre = models.ForeignKey(Genres_List, null=True, on_delete=models.CASCADE)
  added_on = models.DateTimeField( auto_now_add = True  )
  release_date = models.DateField(default=date.today  )

  def __str__ (self):
    return "%s" % (self.album_name)

  class Meta:
    verbose_name = "Album"
    verbose_name_plural = "Albums"

